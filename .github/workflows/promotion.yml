name: Build promotion

on:
  workflow_dispatch:

permissions: {}

jobs:
  promotion:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      id-token: write
    steps:
      - name: Jfrog setup
        uses: jfrog/setup-jfrog-cli@ff5cb544114ffc152db9cea1cd3d5978d5074946 # v4.5.11
        env:
          JF_URL: https://beyondtrust.jfrog.io
        with:
          oidc-provider-name: prod-go-client-library-passwordsafe

      - name: Extract version
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        id: version
        with:
          script: |
            const version = context.ref.match(/[\d][\d*\.]*$/)[0];
            core.setOutput("version", version);

      - name: Promote artifact
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          BUILD_NAME="${{ github.event.repository.name }}"

          BUILD_NUMBER="$(jfrog rt curl api/build/${BUILD_NAME} -s | jq -e -r '[.buildsNumbers[] | select(.uri | contains("'$VERSION'"))] | sort_by(.started) | reverse | .[0].uri[1:]')"

          if [ -z "$BUILD_NUMBER" ]; then
            echo "::error::Error retrieving build from Artifactory. No matching name/version. Name: $BUILD_NAME; Version: $VERSION"
            exit 1
          fi

          echo "Promoting generic"
          jfrog rt build-promote  "$BUILD_NAME" "$BUILD_NUMBER" eng-generic-prod-local --status released --copy=true
