name: SonarQube Analysis

env:
  SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

on:
  pull_request:
    branches: [main]
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  unit-testing:
    runs-on: ubuntu-latest
    environment: unit_test
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Build library
        run: |
          go mod tidy
          go build

      - name: Run unit tests
        run: |
          cd api
          go test -race -coverprofile=coverage.out -v ./...
          go tool cover -func="coverage.out"
        env:
          PASSWORD_SAFE_FAKE_CERTIFICATE_KEY: ${{ vars.PASSWORD_SAFE_FAKE_CERTIFICATE_KEY }}
          PASSWORD_SAFE_FAKE_CERTIFICATE: ${{ vars.PASSWORD_SAFE_FAKE_CERTIFICATE }}
          PASSWORD_SAFE_FAKE_CLIENT_ID: ${{ vars.PASSWORD_SAFE_FAKE_CLIENT_ID }}
          PASSWORD_SAFE_FAKE_CLIENT_SECRET: ${{ vars.PASSWORD_SAFE_FAKE_CLIENT_SECRET }}
          PASSWORD_SAFE_FAKE_API_KEY: ${{ vars.PASSWORD_SAFE_FAKE_API_KEY }}
          PASSWORD_SAFE_API_PATH: ${{ vars.PASSWORD_SAFE_API_PATH }}
          PASSWORD_SAFE_FAKE_API_URL: ${{ vars.PASSWORD_SAFE_FAKE_API_URL }}
          PASSWORD_SAFE_FAKE_PASSWORD : ${{ vars.PASSWORD_SAFE_FAKE_PASSWORD }}

      - name: Save unit tests coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage
          path: api/coverage.out

  sonarqube:
    needs: unit-testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Download coverage
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: coverage

      - name: SonarQube Scan on PR
        if: ${{ github.actor != 'dependabot[bot]' && ( github.event_name == 'pull_request' ||  github.event_name == 'pull_request_target' ) }}
        uses: sonarsource/sonarqube-scan-action@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602 # v6.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.exclusions=api/**/**_test.go,api/entities/**,api/logging/**,api/utils/**,TestClient.go,performancetest/PerformanceTest.go,fuzzing/**
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonar.dev.beyondtrust.com

      - name: SonarQube Scan on branch
        if: ${{ github.actor != 'dependabot[bot]' && ( github.event_name != 'pull_request' &&  github.event_name != 'pull_request_target' ) }}
        uses: sonarsource/sonarqube-scan-action@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602 # v6.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.exclusions=api/**/**_test.go,api/entities/**,api/logging/**,api/utils/**,TestClient.go,performancetest/PerformanceTest.go,fuzzing/**
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonar.dev.beyondtrust.com

      - name: SonarQube Quality Gate check
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: sonarsource/sonarqube-quality-gate-action@cf038b0e0cdecfa9e56c198bbb7d21d751d62c3b # v1.2.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
