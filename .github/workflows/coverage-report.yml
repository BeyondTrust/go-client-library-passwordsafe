name: Code coverage report on PR

on:
    pull_request:
      types: [opened, reopened, synchronize]
    push:
      branches:
        - 'main'

permissions: {}

jobs:
  unit_test:
    runs-on: ubuntu-latest
    environment: unit_test
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Run unit tests
        run: |
          cd api
          go test -cover -coverprofile=coverage.txt ./...
        env:
          PASSWORD_SAFE_FAKE_CERTIFICATE_KEY: ${{ vars.PASSWORD_SAFE_FAKE_CERTIFICATE_KEY }}
          PASSWORD_SAFE_FAKE_CERTIFICATE: ${{ vars.PASSWORD_SAFE_FAKE_CERTIFICATE }}
          PASSWORD_SAFE_FAKE_CLIENT_ID: ${{ vars.PASSWORD_SAFE_FAKE_CLIENT_ID }}
          PASSWORD_SAFE_FAKE_CLIENT_SECRET: ${{ vars.PASSWORD_SAFE_FAKE_CLIENT_SECRET }}
          PASSWORD_SAFE_FAKE_API_KEY: ${{ vars.PASSWORD_SAFE_FAKE_API_KEY }}
          PASSWORD_SAFE_API_PATH: ${{ vars.PASSWORD_SAFE_API_PATH }}
          PASSWORD_SAFE_FAKE_API_URL: ${{ vars.PASSWORD_SAFE_FAKE_API_URL }}

      - name: Save unit tests coverage
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: coverage
          path: api/coverage.txt

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: unit_test
    permissions:
        actions:       read
        pull-requests: write
    steps:
      - uses: fgrosse/go-coverage-report@8c1d1a09864211d258937b1b1a5b849f7e4f2682 # v1.2.0
        with:
            coverage-artifact-name: "coverage"
            coverage-file-name: "coverage.txt"
